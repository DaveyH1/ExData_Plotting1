ggplot(b, x = b) +
geom_histogram()
ggplot(b, aes(x = b) +
geom_histogram()
ggplot(b, aes(x = b)) +
geom_histogram()
rm(list = ls())
set.seed(10)
rnorm(5)
rnorm(5)
set.seed(10)
rnorm(5)
set.seed(1)
rpois(5,2)
>qpois()
?qpois
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
selecr(cran, r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -5:20)
select(cran, -X:size)
select(cran, -X:-size)
-5:20
-(5:20)
select(cran, -(X-size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country = "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
swirl()
## Register application with GitHub to conect to API and answer
## questions
## Load library
library(httr)
library(jsonlite)
## Set up the authentication for GutHub
oauth_endpoints("github")
myapp <- oauth_app("github", key = "64904002cd175348824c",
secret = "bce88f3e95c42b9d762d1dee022f8592efef4c54")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
## Now do the request
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1 <- content(req)
## Convert to DataFrame
json2 <- jsonlite::fromJSON(toJSON(json1))
## Find the correspondiing row
rowNo <- json2[which(json2$url == "https://api.github.com/repos/jtleek/datasharing"),]
## Get the date it was created
rowNo$created_at
swirl()
library(swirl)
swirl()
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow-c(2,1), mar=c(4,4,2,1))
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25,col = "green")
hist(sunset(pollution, region == "west"),col = "green")
hist(subset(pollution, region == "west"),col = "green")
hist(subset(pollution, region == "west")[,1],col = "green")
hist(subset(pollution, region == "west")$pm25,col = "green")
with(pollution, plot(latitude ~ pm25))
with(pollution, plot(latitude,pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude,pollution$pm25,col = pollution$region)
plot(pollution$latitude,ppm,col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1,2),mar=c(5,4,2,1))
wes <- subest(pollution, region == "west")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
rm(ls())
rm(list = ls(0)
rm(list = ls())
library(swirl   )
swirl()
?Devices
with(failthful, plot(eruptions,waiting))
with(faithful, plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed,dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4.1)
)
xyplot(Life.Exp ~ Income | region, data = state, layout(c(4.1)))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozine in NYC")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month = 5)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch = 8)
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
abline(v = median(airquality$Wind), lty=2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation)
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Oxone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
rm(list = ls())
## Set Working Directory
setwd("C:/Users/dave_/OneDrive/GitHub/Coursera/Exploratory Data Analysis/Week 1/ExData_Plotting1")
## Load the data
uci <- read.table("household_power_consumption.txt", header = TRUE, sep=";")
## Tidy the data before we plot
uci$Date <- as.Date(uci$Date, format = "%d/%m/%Y") ## Set the Date variable as date
str(uci)
## Coerce to numeric - this creates NA's into the mix
uci$Sub_metering_1 <- as.numeric(levels(uci$Sub_metering_1))[uci$Sub_metering_1]
uci$Sub_metering_2 <- as.numeric(levels(uci$Sub_metering_2))[uci$Sub_metering_2]
str(uci)
summary(uci$Sub_metering_1)
summary(uci$Sub_metering_2)
## Subset the data to only 2007-02-01 and 2007-02-02
uciSubs <- subset(uci, Date == "2007-02-01" | Date == "2007-02-02")
## Remove other file to clear some space in RAM
rm(uci)
summary(uciSubs$Sub_metering_1)
summary(uciSubs$Sub_metering_2)
## Add a new variable with date and time
uciSubs$DateTime <- as.POSIXct(paste(uciSubs$Date, uciSubs$Time), format="%Y-%m-%d %H:%M:%S")
str(uciSubs)
with(uciSubs, plot(DateTime, c(Sub_metering_1, Sub_metering_2, Sub_metering_3),
type = "l",
ylab = "Energy sub metering",
xlab = ""))
with(uciSubs, plot(DateTime, Sub_metering_1, Sub_metering_2, Sub_metering_3,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
xlab = "")
with(uciSubs, plot(DateTime, Sub_metering_1, Sub_metering_2, Sub_metering_3,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
points(DateTime, Sub_metering_2, type = "l")
## Add next series with points for Sub metering 2
points(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l")
## Add next series with points for Sub metering 2
points(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
points(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
## Create initial plot with Sub_metering_1
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
?legend
##Add a legend top right corner
legend("topright",)
##Add a legend top right corner
legend("topright")
##Add a legend top right corner
legend("topright", legend)
##Add a legend top right corner
legend("topright", legend)
##Add a legend top right corner
legend(x="topright", legend)
##Add a legend top right corner
legend(x="topright")
##Add a legend top right corner
legend(x="topright", legend = c(Sub_metering_1, Sub_metering_2, Sub_metering_3))
##Add a legend top right corner
legend(x="topright", legend = c(uciSubs$Sub_metering_1, uciSubs$Sub_metering_2,
uciSubs$Sub_metering_3))
?pch
## Create initial plot with Sub_metering_1
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1))
## Close the device
dev.cur()
## Create PNG device
png("plot3.png", width = 480, height = 480, units = "px")
## Create initial plot with Sub_metering_1
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1))
## Close the device
dev.off()
## Load the data
uci <- read.table("household_power_consumption.txt", header = TRUE, sep=";")
## Tidy the data before we plot
uci$Date <- as.Date(uci$Date, format = "%d/%m/%Y") ## Set the Date variable as date
str(uci)
## Tidy the data before we plot
uci$Date <- as.Date(uci$Date, format = "%d/%m/%Y") ## Set the Date variable as date
## Coerce to numeric - this creates NA's into the mix
uci$Global_active_power <- as.numeric(levels(uci$Global_active_power))[uci$Global_active_power]
uci$Global_reactive_power <- as.numeric(levels(uci$Global_reactive_power))[uci$Global_reactive_power]
uci$Sub_metering_1 <- as.numeric(levels(uci$Sub_metering_1))[uci$Sub_metering_1]
uci$Sub_metering_2 <- as.numeric(levels(uci$Sub_metering_2))[uci$Sub_metering_2]
uci$Voltage <- as.numeric(levels(uci$Voltage))[uci$Voltage]
str(uci)
## Subset the data to only 2007-02-01 and 2007-02-02
uciSubs <- subset(uci, Date == "2007-02-01" | Date == "2007-02-02")
## Remove other file to clear some space in RAM
rm(uci)
summary(uciSubs$Global_active_power)
summary(uciSubs$Global_reactive_power)
summary(uciSubs$Sub_metering_1)
summary(uciSubs$Sub_metering_2)
summary(uciSubs$Sub_metering_3)
## Add a new variable with date and time
uciSubs$DateTime <- as.POSIXct(paste(uciSubs$Date, uciSubs$Time), format="%Y-%m-%d %H:%M:%S")
## Set up the chart area for 2 x 2
par(mfrow = c(2,2))
## Plot the first chart
with(uciSubs, plot(DateTime, Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = ""))
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
?mfrow
?par
## Set up the chart area for 2 x 2
par(mfcol = c(2,2))
## Plot the first chart
with(uciSubs, plot(DateTime, Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = ""))
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
## Plot the third chart
with(uciSubs, plot(DateTime, Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
## Plot the third chart
with(uciSubs, plot(DateTime, Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime"))
## Set up the chart area for 2 x 2
par(mfcol = c(2,2))
## Plot the first chart
with(uciSubs, plot(DateTime, Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = ""))
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1))
## Plot the third chart
with(uciSubs, plot(DateTime, Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
## Plot the third chart
with(uciSubs, plot(DateTime, Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime"))
## Create PNG device
png("plot4.png", width = 480, height = 480, units = "px")
## Set up the chart area for 2 x 2
par(mfcol = c(2,2))
## Plot the first chart
with(uciSubs, plot(DateTime, Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = ""))
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1))
## Plot the third chart
with(uciSubs, plot(DateTime, Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
## Plot the third chart
with(uciSubs, plot(DateTime, Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime"))
## Close the device
dev.off()
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1), border = NA)
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1), border = NULL)
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1), border = NULL)
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1), bty = "n")
## Create PNG device
png("plot4.png", width = 480, height = 480, units = "px")
## Set up the chart area for 2 x 2
par(mfcol = c(2,2))
## Plot the first chart
with(uciSubs, plot(DateTime, Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = ""))
## Create second plot with Sub_metering
with(uciSubs, plot(DateTime, Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = ""))
## Add next series with points for Sub metering 2
lines(uciSubs$DateTime, uciSubs$Sub_metering_2, type = "l", col = "red")
## Add next series with points for Sub metering 3
lines(uciSubs$DateTime, uciSubs$Sub_metering_3, type = "l", col = "blue")
##Add a legend top right corner
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red","blue"), lty = c(1,1,1), bty = "n")
## Plot the third chart
with(uciSubs, plot(DateTime, Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
## Plot the third chart
with(uciSubs, plot(DateTime, Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime"))
## Close the device
dev.off()
